{"version":3,"sources":["Header.js","ButtonGroup.js","DocumentPanel.js","config.js","utils.js","App.js","index.js"],"names":["Header","props","title","version","react_default","a","createElement","className","ButtonGroup","handleInput","event","_this","addFiles","target","files","value","ButtonGroup_ButtonAdd","this","ButtonGroup_ButtonConvert","progState","convert","Component","ButtonAdd","type","name","id","onChange","multiple","htmlFor","react_fontawesome_index_es","icon","size","ButtonConvert","buttonIcon","buttonText","spin","onClick","DocumentPanel","handleDropInput","preventDefault","stopPropagation","dataTransfer","handleDragOver","_this$props","count","clearFiles","removeFile","onDrop","onDragOver","DocumentPanel_LabelCount","DocumentPanel_ButtonClear","DocumentPanel_FileList","LabelCount","ButtonClear","FileList","FileTiles","map","file","index","DocumentPanel_FileTile","key","length","FileTile","color","CONFIG","api_url","default_download_name","MESSAGES","SERVER_NOT_AVAILABLE","SERVER_ERROR","alertError","error","toString","toLowerCase","includes","alert","functions","downloadFile","data","filename","url","window","URL","createObjectURL","Blob","link","document","href","setAttribute","body","appendChild","click","removeChild","isWithinSizeLimits","sizeLimit","concat","library","add","faSync","faTrash","faPlusCircle","faMinusCircle","faCloudUploadAlt","App","componentDidMount","state","fileNames","sizeLimitMB","filterREGEX","fileList","filenames","Array","from","filterFiles","setState","Object","toConsumableArray","filter","UTILS","test","fileIndex","i","_callee","formData","response","regenerator_default","wrap","_context","prev","next","FormData","forEach","append","axios","method","responseType","config","headers","Content-Type","sent","t0","stop","src_Header","src_ButtonGroup","src_DocumentPanel","ReactDOM","render","src_App","getElementById"],"mappings":"oVAceA,EAZA,SAAAC,GAAS,IACZC,EAAmBD,EAAnBC,MAAOC,EAAYF,EAAZE,QACf,OACIC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UACKJ,EACDE,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAeJ,aCJzCK,oNACFC,YAAc,SAAAC,GACVC,EAAKV,MAAMW,SAASF,EAAMG,OAAOC,OACjCJ,EAAMG,OAAOE,MAAQ,4EAIrB,OACIX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAACU,EAAD,CAAWP,YAAaQ,KAAKR,cAC7BL,EAAAC,EAAAC,cAACY,EAAD,CACIC,UAAWF,KAAKhB,MAAMkB,UACtBC,QAASH,KAAKhB,MAAMmB,kBAZdC,cAmBpBC,EAAY,SAAArB,GACd,OACIG,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,SACIiB,KAAK,OACLhB,UAAU,YACViB,KAAK,SACLC,GAAG,OACHC,SAAUzB,EAAMQ,YAChBkB,UAAQ,IAEZvB,EAAAC,EAAAC,cAAA,SAAOsB,QAAQ,OAAOrB,UAAU,wBAAhC,iBACkBH,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAAiBC,KAAK,cAAcC,KAAK,UAMjEC,EAAgB,SAAA/B,GAClB,IAAIgC,EAAYC,EAShB,MARwB,YAApBjC,EAAMkB,WACNe,EAAa,WACbD,EAAa7B,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAAiBC,KAAK,OAAOC,KAAK,SAE/CG,EAAa,cACbD,EAAa7B,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAAiBC,KAAK,OAAOC,KAAK,KAAKI,MAAI,KAIxD/B,EAAAC,EAAAC,cAAA,UACIC,UAAU,oCACV6B,QAAS,kBAAMnC,EAAMmB,YAEpBc,EACAD,IAKEzB,IC1DT6B,oNACFC,gBAAkB,SAAA5B,GACdA,EAAM6B,iBACN7B,EAAM8B,kBACN7B,EAAKV,MAAMW,SAASF,EAAM+B,aAAa3B,UAG3C4B,eAAiB,SAAAhC,GACbA,EAAM6B,iBACN7B,EAAM8B,2FAGD,IAAAG,EAC4C1B,KAAKhB,MAA9C2C,EADHD,EACGC,MAAOC,EADVF,EACUE,WAAYC,EADtBH,EACsBG,WAAYhC,EADlC6B,EACkC7B,MACvC,OACIV,EAAAC,EAAAC,cAAA,OACIC,UAAU,gBACVwC,OAAQ9B,KAAKqB,gBACbU,WAAY/B,KAAKyB,gBAEjBtC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAC2C,EAAD,CAAYL,MAAOA,IACnBxC,EAAAC,EAAAC,cAAC4C,EAAD,CAAaL,WAAYA,KAE7BzC,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAC6C,EAAD,CAAUrC,MAAOA,EAAOgC,WAAYA,YA1BxBzB,cAgCtB+B,EAAa,SAAAnD,GACf,OACIG,EAAAC,EAAAC,cAAA,QACIC,UACI,iBAAmC,IAAhBN,EAAM2C,MAAc,cAAgB,KAG1D3C,EAAM2C,MALX,eAUFS,EAAc,SAAApD,GAChB,OACIG,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAc6B,QAASnC,EAAM4C,YACzCzC,EAAAC,EAAAC,cAAA,iBACAF,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAAiBC,KAAK,eAAeC,KAAK,SAKhDuB,EAAW,SAAArD,GACb,IAAMsD,EAAYtD,EAAMa,MAAM0C,IAAI,SAACC,EAAMC,GACrC,OACItD,EAAAC,EAAAC,cAACqD,EAAD,CACIF,KAAMA,EACNG,IAAKF,EACLjC,GAAIiC,EACJZ,WAAY7C,EAAM6C,eAK9B,OAAyB,IAArBS,EAAUM,OAENzD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAAiBC,KAAK,mBAAmBC,KAAK,OAC9C3B,EAAAC,EAAAC,cAAA,mCAIDF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YAAd,IAA2BgD,EAA3B,MAITO,EAAW,SAAA7D,GACb,IAAMwD,EAAOxD,EAAMwD,KACnB,OACIrD,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QACTkD,EAAKjC,KACNpB,EAAAC,EAAAC,cAAA,QACIC,UAAU,aACV6B,QAAS,kBAAMnC,EAAM6C,WAAW7C,EAAMwB,MAEtCrB,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAAiBC,KAAK,QAAQC,KAAK,KAAKgC,MAAM,eAM/C1B,IChGX2B,EAAS,CACT9D,MAAO,QACPC,QAAS,OACT8D,QAAS,WACTC,sBAAuB,WAEvBC,EAAW,CACXC,qBACI,mFACJC,aACI,yJCaR,SAASC,EAAWC,IAChBA,EAAQA,EAAMC,WAAWC,eACfC,SAAS,WACfC,MAAMR,EAASC,sBACRG,EAAMG,SAAS,OACtBC,MAAMR,EAASE,cAEfM,MAAMJ,GAId,IACeK,EADG,CAAEC,aAjCpB,SAAsBC,EAAMC,GACxB,IAAMC,EAAMC,OAAOC,IAAIC,gBAAgB,IAAIC,KAAK,CAACN,KAC3CO,EAAOC,SAAShF,cAAc,KACpC+E,EAAKE,KAAOP,EACZK,EAAKG,aAAa,WAAYT,GAC9BO,SAASG,KAAKC,YAAYL,GAC1BA,EAAKM,QACLL,SAASG,KAAKG,YAAYP,IA0BIf,aAAYuB,mBAvB9C,SAA4BpC,EAAMqC,GAE9B,QADcrC,EAAK1B,KAAO,IACZ+D,KACVxB,EAAU,GAAAyB,OACHtC,EAAKjC,KADF,4BAAAuE,OACiCD,EADjC,gBAGH,KCAfE,IAAQC,IAAIC,IAAQC,IAASC,IAAcC,IAAeC,SA2F3CC,6MAxFXC,kBAAoB,kBAAOlB,SAASpF,MAAQ8D,EAAO9D,SACnDuG,qBACO,CACC3F,MAAO,GACP4F,UAAW,GACXvF,UAAW,UACXwF,YAAa,EACbC,YAAa,SAEd5C,KAGPpD,SAAW,SAAAiG,GAEP,IAAMC,GADND,EAAWE,MAAMC,KAAKH,IACKrD,IAAI,SAAAC,GAAI,OAAIA,EAAKjC,OACtCV,EAAQH,EAAKsG,YAAYJ,GAC/BlG,EAAKuG,SAAS,CACVpG,MAAMqG,OAAAC,EAAA,EAAAD,CAAKxG,EAAK8F,MAAM3F,OAAjBiF,OAAAoB,OAAAC,EAAA,EAAAD,CAA2BrG,IAChC4F,UAAW/F,EAAK8F,MAAMC,UAAUX,OAAOe,QAI/CG,YAAc,SAAAnG,GACV,OAAOA,EAAMuG,OAAO,SAAA5D,GAChB,OACI6D,EAAMzB,mBAAmBpC,EAAM9C,EAAK8F,MAAME,aAC1ChG,EAAK8F,MAAMG,YAAYW,KAAK9D,EAAKjC,OAChCb,EAAK8F,MAAMC,UAAUhC,SAASjB,EAAKjC,WAKhDsB,WAAa,SAAA0E,GAAa,IACd1G,EAAUH,EAAK8F,MAAf3F,MACRH,EAAKuG,SAAS,CACVpG,MAAOA,EAAMuG,OAAO,SAAC5D,EAAMgE,GACvB,OAAOA,IAAMD,SAKzB3E,WAAa,WACTlC,EAAKuG,SAAS,CAAEpG,MAAO,QAG3BM,6BAAU,SAAAsG,IAAA,IAAAC,EAAAC,EAAA,OAAAC,EAAAxH,EAAAyH,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACNtH,EAAKuG,SAAS,CAAE/F,UAAW,aACvBwG,EAAW,IAAIO,SACnBvH,EAAK8F,MAAM3F,MAAMqH,QAAQ,SAAA1E,GACrBkE,EAASS,OAAO,SAAU3E,KAJxBsE,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAOqBI,IAAM,CACzBC,OAAQ,OACRtD,IAAKrE,EAAK8F,MAAMxC,QAChBa,KAAM6C,EACNY,aAAc,cACdC,OAAQ,CAAEC,QAAS,CAAEC,eAAgB,0BAZvC,OAOId,EAPJG,EAAAY,KAcFrB,EAAMzC,aAAa+C,EAAS9C,KAAMnE,EAAK8F,MAAMvC,uBAd3C6D,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAa,GAAAb,EAAA,SAgBFpH,EAAKuG,SAAS,CAAE/F,UAAW,YAC3BmG,EAAMhD,WAANyD,EAAAa,IAjBE,QAmBNjI,EAAKuG,SAAS,CAAE/F,UAAW,YAnBrB,yBAAA4G,EAAAc,SAAAnB,EAAAzG,KAAA,qFAuBN,OACIb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAACwI,EAAD,CAAQ5I,MAAOe,KAAKwF,MAAMvG,MAAOC,QAASc,KAAKwF,MAAMtG,UACrDC,EAAAC,EAAAC,cAACyI,EAAD,CACI5H,UAAWF,KAAKwF,MAAMtF,UACtBP,SAAUK,KAAKL,SACfQ,QAASH,KAAKG,UAElBhB,EAAAC,EAAAC,cAAC0I,EAAD,CACIpG,MAAO3B,KAAKwF,MAAM3F,MAAM+C,OACxBhB,WAAY5B,KAAK4B,WACjBjC,SAAUK,KAAKL,SACfkC,WAAY7B,KAAK6B,WACjBhC,MAAOG,KAAKwF,MAAM3F,gBAlFpBO,mBCdlB4H,IAASC,OAAO9I,EAAAC,EAAAC,cAAC6I,EAAD,MAAS7D,SAAS8D,eAAe","file":"static/js/main.7df48b40.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = props => {\r\n    const { title, version } = props;\r\n    return (\r\n        <div>\r\n            <h1>\r\n                {title}\r\n                <span className=\"lbl-version\">{version}</span>\r\n            </h1>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport \"./css/buttonGroup.css\";\r\n\r\nclass ButtonGroup extends Component {\r\n    handleInput = event => {\r\n        this.props.addFiles(event.target.files);\r\n        event.target.value = \"\";\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"button-group\">\r\n                <ButtonAdd handleInput={this.handleInput} />\r\n                <ButtonConvert\r\n                    progState={this.props.progState}\r\n                    convert={this.props.convert}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst ButtonAdd = props => {\r\n    return (\r\n        <div>\r\n            <input\r\n                type=\"file\"\r\n                className=\"inputFile\"\r\n                name=\"file[]\"\r\n                id=\"file\"\r\n                onChange={props.handleInput}\r\n                multiple\r\n            />\r\n            <label htmlFor=\"file\" className=\"button button-accent\">\r\n                Add Documents <FontAwesomeIcon icon=\"plus-circle\" size=\"sm\" />\r\n            </label>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst ButtonConvert = props => {\r\n    let buttonIcon, buttonText;\r\n    if (props.progState === \"default\") {\r\n        buttonText = \"Convert \";\r\n        buttonIcon = <FontAwesomeIcon icon=\"sync\" size=\"sm\" />;\r\n    } else {\r\n        buttonText = \"Converting \";\r\n        buttonIcon = <FontAwesomeIcon icon=\"sync\" size=\"sm\" spin />;\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"button button-primary align-right\"\r\n            onClick={() => props.convert()}\r\n        >\r\n            {buttonText}\r\n            {buttonIcon}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default ButtonGroup;\r\n","import React, { Component } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport \"./css/documentPanel.css\";\r\n\r\nclass DocumentPanel extends Component {\r\n    handleDropInput = event => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        this.props.addFiles(event.dataTransfer.files);\r\n    };\r\n\r\n    handleDragOver = event => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n    };\r\n\r\n    render() {\r\n        const { count, clearFiles, removeFile, files } = this.props;\r\n        return (\r\n            <div\r\n                className=\"documentPanel\"\r\n                onDrop={this.handleDropInput}\r\n                onDragOver={this.handleDragOver}\r\n            >\r\n                <div className=\"info\">\r\n                    <LabelCount count={count} />\r\n                    <ButtonClear clearFiles={clearFiles} />\r\n                </div>\r\n                <hr />\r\n\r\n                <FileList files={files} removeFile={removeFile} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst LabelCount = props => {\r\n    return (\r\n        <span\r\n            className={\r\n                \"documentCount\" + (props.count === 0 ? \" colorEmpty\" : \"\")\r\n            }\r\n        >\r\n            {props.count} Documents\r\n        </span>\r\n    );\r\n};\r\n\r\nconst ButtonClear = props => {\r\n    return (\r\n        <span className=\"clearButton\" onClick={props.clearFiles}>\r\n            <span> </span>\r\n            <FontAwesomeIcon icon=\"minus-circle\" size=\"sm\" />\r\n        </span>\r\n    );\r\n};\r\n\r\nconst FileList = props => {\r\n    const FileTiles = props.files.map((file, index) => {\r\n        return (\r\n            <FileTile\r\n                file={file}\r\n                key={index}\r\n                id={index}\r\n                removeFile={props.removeFile}\r\n            />\r\n        );\r\n    });\r\n\r\n    if (FileTiles.length === 0) {\r\n        return (\r\n            <div className=\"dropIndicator\">\r\n                <FontAwesomeIcon icon=\"cloud-upload-alt\" size=\"5x\" />\r\n                <p> Drop Documents Here </p>\r\n            </div>\r\n        );\r\n    } else {\r\n        return <ol className=\"fileList\"> {FileTiles} </ol>;\r\n    }\r\n};\r\n\r\nconst FileTile = props => {\r\n    const file = props.file;\r\n    return (\r\n        <li className=\"file\">\r\n            {file.name}\r\n            <span\r\n                className=\"removeFile\"\r\n                onClick={() => props.removeFile(props.id)}\r\n            >\r\n                <FontAwesomeIcon icon=\"trash\" size=\"sm\" color=\"#d8497d\" />\r\n            </span>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default DocumentPanel;\r\n","let CONFIG = {\r\n    title: \"DocTa\",\r\n    version: \"v2.4\",\r\n    api_url: \"/convert\",\r\n    default_download_name: \"job.zip\"\r\n};\r\nlet MESSAGES = {\r\n    SERVER_NOT_AVAILABLE:\r\n        \"Server Not Running :( \\nLooks like you need to run the server ('docta.py') again\",\r\n    SERVER_ERROR:\r\n        \"Server's Messed Up :(\\nLook, it's not you, it's not me, it's the server. Something probably went wrong during conversion.\\n Please contact my creator\"\r\n};\r\nexport { CONFIG, MESSAGES };\r\n","import { MESSAGES } from \"./config\";\r\nfunction downloadFile(data, filename) {\r\n    const url = window.URL.createObjectURL(new Blob([data]));\r\n    const link = document.createElement(\"a\");\r\n    link.href = url;\r\n    link.setAttribute(\"download\", filename);\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n}\r\n\r\nfunction isWithinSizeLimits(file, sizeLimit) {\r\n    let size_MB = file.size / 1000000;\r\n    if (size_MB > sizeLimit) {\r\n        alertError(\r\n            `${file.name} exceed the size limit: ${sizeLimit} megabytes`\r\n        );\r\n        return false;\r\n    } else {\r\n        return true;\r\n    }\r\n}\r\n\r\nfunction alertError(error) {\r\n    error = error.toString().toLowerCase();\r\n    if (error.includes(\"network\")) {\r\n        alert(MESSAGES.SERVER_NOT_AVAILABLE);\r\n    } else if (error.includes(\"500\")) {\r\n        alert(MESSAGES.SERVER_ERROR);\r\n    } else {\r\n        alert(error);\r\n    }\r\n}\r\n\r\nconst functions = { downloadFile, alertError, isWithinSizeLimits };\r\nexport default functions;\r\n","import React, { Component } from \"react\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport {\n    faSync,\n    faTrash,\n    faPlusCircle,\n    faMinusCircle,\n    faCloudUploadAlt\n} from \"@fortawesome/free-solid-svg-icons\";\nimport axios from \"axios\";\nimport Header from \"./Header\";\nimport ButtonGroup from \"./ButtonGroup\";\nimport DocumentPanel from \"./DocumentPanel\";\n\nimport UTILS from \"./utils\";\nimport { CONFIG } from \"./config\";\n\nlibrary.add(faSync, faTrash, faPlusCircle, faMinusCircle, faCloudUploadAlt);\n\nclass App extends Component {\n    componentDidMount = () => (document.title = CONFIG.title);\n    state = {\n        ...{\n            files: [],\n            fileNames: [],\n            progState: \"default\",\n            sizeLimitMB: 6,\n            filterREGEX: /.docx/\n        },\n        ...CONFIG\n    };\n\n    addFiles = fileList => {\n        fileList = Array.from(fileList);\n        const filenames = fileList.map(file => file.name);\n        const files = this.filterFiles(fileList);\n        this.setState({\n            files: [...this.state.files, ...files],\n            fileNames: this.state.fileNames.concat(filenames)\n        });\n    };\n\n    filterFiles = files => {\n        return files.filter(file => {\n            return (\n                UTILS.isWithinSizeLimits(file, this.state.sizeLimitMB) &\n                this.state.filterREGEX.test(file.name) &\n                !this.state.fileNames.includes(file.name)\n            );\n        });\n    };\n\n    removeFile = fileIndex => {\n        const { files } = this.state;\n        this.setState({\n            files: files.filter((file, i) => {\n                return i !== fileIndex;\n            })\n        });\n    };\n\n    clearFiles = () => {\n        this.setState({ files: [] });\n    };\n\n    convert = async () => {\n        this.setState({ progState: \"progress\" });\n        let formData = new FormData();\n        this.state.files.forEach(file => {\n            formData.append(\"file[]\", file);\n        });\n        try {\n            const response = await axios({\n                method: \"post\",\n                url: this.state.api_url,\n                data: formData,\n                responseType: \"arraybuffer\",\n                config: { headers: { \"Content-Type\": \"multipart/form-data\" } }\n            });\n            UTILS.downloadFile(response.data, this.state.default_download_name);\n        } catch (e) {\n            this.setState({ progState: \"default\" });\n            UTILS.alertError(e);\n        }\n        this.setState({ progState: \"default\" });\n    };\n\n    render() {\n        return (\n            <div className=\"container\">\n                <Header title={this.state.title} version={this.state.version} />\n                <ButtonGroup\n                    progState={this.state.progState}\n                    addFiles={this.addFiles}\n                    convert={this.convert}\n                />\n                <DocumentPanel\n                    count={this.state.files.length}\n                    clearFiles={this.clearFiles}\n                    addFiles={this.addFiles}\n                    removeFile={this.removeFile}\n                    files={this.state.files}\n                />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./css/index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}